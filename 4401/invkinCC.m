
function q = invkinCC(T)

%Inverse Kinematics Equations for the CrustCrawler Robot
%Developed for MSE-4401 by Prof. Ana Luisa Trejos
%function q = invkinCC(T) where T is the transformation matrix from 0 to 6
%that is generated by the forward kinematics equtions
%This solution is limited in theta1, theta3 and theta5 to angles between 0
%and pi
%Version 1. October 8, 2013

% Assign values
dx =T(1,4);
dy =T(2,4);
dz =T(3,4);
nx =T(1,1);
ny =T(2,1);
nz =T(3,1);
sx =T(1,2);
sy =T(2,2);
sz =T(3,2);
ax =T(1,3);
ay =T(2,3);
az =T(3,3);

%assign constants

l1 = 118.1;
l2 = 154.1;
d4 = 115.3;
d6 = 206; %in mm

%Compute the wrist centre location

pwx=dx-(d6*ax);
pwy=dy-(d6*ay);
pwz=dz-(d6*az);

%First joint - there is still another option I am not yet considering
theta1=atan2(pwy,pwx);
c1 = cos(theta1);
s1 = sin(theta1);

%Third joint
s3=(pwx^2+pwy^2+(pwz-l1)^2-l2^2-d4^2)/(2*l2*d4);
c3=sqrt(1-s3^2);
theta3=atan2(s3,c3);

%second joint

A = l2*c1+d4*c1*s3;
B = d4*c1*c3;
D = -d4*c3;
E = l2+d4*s3;

s2 = (A*(pwz-l1) - D*pwx)/(A*E - B*D) 
c2 =-(B*(pwz-l1) - E*pwx)/(A*E - B*D)

%s2 = ((l2+d4*c3)*pwz-d4*s3*sqrt(pwx^2+pwy^2))/(pwx^2+pwy^2+pwz^2);
%c2 = ((l2+d4*c3)*sqrt(pwx^2+pwy^2)+d4*s3*pwz)/(pwx^2+pwy^2+pwz^2);
theta2=atan2(s2,c2);

%computing R03
%define alphas
alpha1=pi/2;
alpha2=0;
alpha3=pi/2;

ca1=cos(alpha1);
sa1=sin(alpha1);
ca2=cos(alpha2);
sa2=sin(alpha2);
ca3=cos(alpha3);
sa3=sin(alpha3);


%compute As
A01 = [c1 -s1*ca1 s1*sa1 0; s1 c1*ca1 -c1*sa1 0; 0 sa1 ca1 l1; 0 0 0 1];
A12 = [c2 -s2*ca2 s2*sa2 l2*c2; s2 c2*ca2 -c2*sa2 l2*s2; 0 sa2 ca2 0; 0 0 0 1];
A23 = [c3 -s3*ca3 s3*sa3 0; s3 c3*ca3 -c3*sa3 0; 0 sa3 ca3 0; 0 0 0 1];
   
A03 = A01*A12*A23;
R03 = A03(1:3,1:3)
R06 = T(1:3,1:3);
R36 = transpose(R03)*R06;

%Redefine values

nx3 =R36(1,1);
ny3 =R36(2,1);
nz3 =R36(3,1);
sx3 =R36(1,2);
sy3 =R36(2,2);
sz3 =R36(3,2);
ax3 =R36(1,3);
ay3 =R36(2,3);
az3 =R36(3,3);

%theta 4
theta4 = atan2(ay3,ax3);

theta5 = atan2(sqrt(ax3^2+ay3^2),az3);

theta6 = atan2(sz3,-nz3);


q=[theta1 theta2 theta3 theta4 theta5 theta6];


